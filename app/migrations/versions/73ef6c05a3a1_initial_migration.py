"""Initial migration

Revision ID: 73ef6c05a3a1
Revises: 
Create Date: 2024-02-09 16:25:43.695195

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "73ef6c05a3a1"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permission_groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("permissions", sa.ARRAY(sa.String()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "ecgs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("processed", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ecgs_id"), "ecgs", ["id"], unique=False)
    op.create_table(
        "user_permission_groups",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("permission_group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_group_id"],
            ["permission_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "permission_group_id"),
    )
    op.create_table(
        "leads",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ecg_id", sa.UUID(), nullable=True),
        sa.Column("name", sa.String(length=10), nullable=True),
        sa.Column("number_of_samples", sa.Integer(), nullable=True),
        sa.Column("signal", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ecg_id"],
            ["ecgs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "lead_analysis",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("num_zero_crosses", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["leads.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("lead_analysis")
    op.drop_table("leads")
    op.drop_table("user_permission_groups")
    op.drop_index(op.f("ix_ecgs_id"), table_name="ecgs")
    op.drop_table("ecgs")
    op.drop_table("users")
    op.drop_table("permission_groups")
    # ### end Alembic commands ###
